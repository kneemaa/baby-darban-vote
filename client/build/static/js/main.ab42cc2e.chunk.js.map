{"version":3,"sources":["pages/NoMatch/NoMatch.js","utils/api.js","components/Chart.js","components/CircleTimer.js","components/Form/Input.js","components/Form/FormBtn.js","components/PollQuestion.js","components/Form/RadioBtn.js","components/Announce.js","pages/Home/Home.js","index.js"],"names":["NoMatch","role","axios","get","vote","post","Chart","animationEnabled","theme","title","text","axisX","reversed","axisY","includeZero","labelFormatter","this","addSymbols","data","type","dataPoints","y","props","boys","label","girls","options","e","suffixes","order","Math","max","floor","log","value","length","suffix","CanvasJS","formatNumber","pow","Component","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","className","CircleTimer","remainingTime","moment","endTime","diff","daysDuration","ceil","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","Input","FormBtn","style","float","marginBottom","children","PollQuestion","state","author","gender","castVote","event","preventDefault","API","then","res","console","catch","err","postCastedVote","target","name","setState","onCastBallot","voteCallback","ballotCast","color","onChange","placeholder","onClick","bind","Announce","Home","genders","timeLeft","loadResults","breakDownGender","Cookies","handleCastedVote","childData","set","path","getTimeLeft","entry","distance","rootElement","document","getElementById","ReactDOM","render","element"],"mappings":"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","file":"static/js/main.ab42cc2e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NoMatch = () => {\n  return(\n    <div>\n      <h1>404 Page Not Found</h1>\n      <h1>\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n          ðŸ™„\n        </span>\n      </h1>\n    </div>\n  )\n}\n\nexport default NoMatch;\n","import axios from \"axios\";\n\nexport default {\n  // calls the server's /api/genders endpoint to get all the results\n  getResults: () => {\n    return axios.get(\"/api/genders\");\n  },\n  // does a POSt to the /api/vote endpoint of the server to cast a vote\n  vote: (vote) => {\n    return axios.post(\"/api/vote\", vote)\n  }\n};\n","import React, { Component } from \"react\"\nimport CanvasJSReact, {CanvasJS, CanvasJSChart} from \"canvasjs-react-charts\"\n\nclass Chart extends Component {\n  options() {\n    return {\n      animationEnabled: true,\n      theme: \"light2\",\n      title:{\n        text: \"Gender Guesses\"\n      },\n      axisX: {\n        title: \"Gender\",\n        reversed: true,\n      },\n      axisY: {\n        title: \"Number Of Votes\",\n        includeZero: true,\n        labelFormatter: this.addSymbols\n      },\n      data: [{\n        type: \"bar\",\n        dataPoints: [\n          { y:  this.props.boys, label: \"Boy\" },\n          { y:  this.props.girls, label: \"Girl\" },\n        ]\n      }]\n  }\n  }\n\n  render() {\n\t\treturn (\n      <div>\n        <CanvasJSChart options={this.options()} boys={this.props.boys}/>\n      </div>\n\t\t);\n\t}\n\n\taddSymbols(e){\n\t\tvar suffixes = [\"\", \"K\", \"M\", \"B\"];\n\t\tvar order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n\t\tif(order > suffixes.length - 1)\n\t\t\torder = suffixes.length - 1;\n\t\tvar suffix = suffixes[order];\n\t\treturn CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n\t}\n}\n\nexport default Chart\n","import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport moment from \"moment\"\nimport \"./CircleTimer.css\"\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport const CircleTimer = (props) => {\n  \n  const announceTime = moment(props.endTime)\n  const remainingTime = announceTime.diff(moment(), \"seconds\")\n\n  const days = Math.ceil(remainingTime / daySeconds);\n  const daysDuration = days * daySeconds;\n\n  return (\n    <div className=\"CircleTimer\">\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#7E2E84\"]]}\n        duration={daysDuration}\n        initialRemainingTime={remainingTime}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#D14081\"]]}\n        duration={daySeconds}\n        initialRemainingTime={remainingTime % daySeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > hourSeconds\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#EF798A\"]]}\n        duration={hourSeconds}\n        initialRemainingTime={remainingTime % hourSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > minuteSeconds\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#218380\"]]}\n        duration={minuteSeconds}\n        initialRemainingTime={remainingTime % minuteSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > 0\n        ]}\n      >\n        {({ elapsedTime }) =>\n          renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n        }\n      </CountdownCircleTimer>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className=\"form-group\">\n    <input className=\"form-control\" {...props} />\n  </div>;\n","import React from \"react\";\n\nexport const FormBtn = props =>\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n    {props.children}\n  </button>;\n","import React, { Component } from \"react\"\nimport { FormBtn, Input } from \"../components/Form\"\nimport API from \"../utils/api\"\nimport \"../App.css\"\n\nclass PollQuestion extends Component {\n  state = {\n    author: \"\",\n    gender: \"\"\n  }\n\n  // cast vote by sending the Post call to the server\n  castVote = event => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault \n    event.preventDefault()\n\n    // if the author and gender have both been selected in the form can we cast the ballot\n    if (this.state.author && this.state.gender) {\n      API.vote({\n        gender: this.state.gender,\n        author: this.state.author\n      })\n      // good practice to have a then statement if having a .catch\n      .then(res => console.log('vote cast for ' + this.state.author))\n      // if there's an error, 'catch' it and console.log it\n      .catch(err => console.log(err))\n    }\n  }\n\n  // used to update the state of what the form is filled out as\n  postCastedVote = event => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  // what to do when the formbtn is clicked\n  onCastBallot = (event) => {\n    // cast the vote function is called\n    this.castVote(event)\n    // ballotCast state is updated\n    this.props.voteCallback({ballotCast: true})\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"PollQuestion\">\n          <p color=\"blue\"> I'm the poll QUESTION section</p>\n          <form>\n            <Input \n              value={this.state.author}\n              onChange={this.postCastedVote}\n              placeholder=\"what's your name?\"\n              name=\"author\"\n            />\n            <FormBtn\n              onClick={this.onCastBallot}\n            >\n              Cast Vote\n            </FormBtn>\n            <div onChange={this.postCastedVote.bind(this)}>\n              <input type=\"radio\" value=\"boy\" name=\"gender\"/> Boy\n              <input type=\"radio\" value=\"girl\" name=\"gender\"/> Girl\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PollQuestion\n","import React, { Component } from \"react\"\n\nclass RadioBtn extends Component {\n\n  setGender(event) {\n    console.log(event.target.value)\n  }\n\n  render() {\n    return (\n      <div onChange={this.setGender.bind(this)}>\n        <input type=\"radio\" value=\"boy\" name=\"gender\"/> Boy\n        <input type=\"radio\" value=\"girl\" name=\"gender\"/> Girl\n      </div>\n    )\n  }\n}\n\nexport default RadioBtn\n","import React from \"react\"\n\nexport const Announce = () => {\n  return (\n    <p>we're having baby pizza!</p>\n  )\n}\n","import React, { Component } from \"react\"\nimport API from \"../../utils/api\"\nimport Chart from \"../../components/Chart\"\nimport { CircleTimer } from \"../../components/CircleTimer\"\nimport PollQuestion from \"../../components/PollQuestion\"\nimport {Announce} from \"../../components/Announce\"\nimport moment from \"moment\"\nimport Cookies from 'universal-cookie'\nimport \"../../App.css\"\n\nclass Home extends Component {\n  // initialize the state with the values we want to manage\n  state = {\n    genders: [],\n    girls: 0,\n    boys: 0,\n    timeLeft: 1000,\n    gender: \"\",\n    author: \"\",\n    ballotCast: false,\n    endTime: \"2021-11-16 16:00:00\"\n  }\n\n  // when this component mounts, run these functions\n  componentDidMount() {\n    this.loadResults()\n    this.getTimeLeft()\n  };\n\n  // do the API call for getting all of the results and update state\n  loadResults = () => {\n    API.getResults()\n      .then(res => this.setState({genders: res.data}))\n      .catch(err => console.log(err))\n      // we will wait for the state to be updated then will run the breakDownGender() function\n      .then(res => this.breakDownGender())\n\n      // set a cookie that the user has cast a ballot\n      const cookies = new Cookies()\n      if (cookies.get('ballotCast')) {\n        this.setState({ballotCast: true})\n      }\n  }\n\n  // lets count the votes\n  breakDownGender() {\n    // assign the state value to a variable for easier reference below\n    const genders = this.state.genders\n\n    // iterate through each of the entries and check for the gender, anything that doesn't match will not be tallied\n    for (let entry in genders) {\n      if (genders[entry].gender === 'girl') {\n        this.setState((state) => {\n          return { girls: state.girls + 1}\n        })\n      }\n\n      if (genders[entry].gender === 'boy') {\n        this.setState((state) => {\n          return { boys: state.boys + 1}\n        })\n      }\n    }\n  }\n\n  getTimeLeft() {\n    // convert the desired end time\n    const announceTime = moment(this.state.endTime)\n    // calculate how many seconds between now and the desired end time\n    const distance = announceTime.diff(moment(), \"seconds\")\n    // put this time in the state\n    this.setState({timeLeft: distance})\n  }\n\n  // call back function for the PollQuestion component to be able to send back data for the state\n  handleCastedVote = (childData) => {\n    // update the state with the data sent back\n    this.setState(childData)\n    // request the database be reloaded to the client\n    this.loadResults()\n\n    // lets set a cookie that the ballot was cast\n    const cookies = new Cookies()\n    cookies.set('ballotCast', {path: '/'})\n  }\n\n  // now lets render our DOM\n  render() {\n    return (\n      <div>\n        {/* ternery condition explained\n          condition ? ifTrue : ifFalse\n        */}\n        {/* if the timeLeft in the state is equal or less than 0 move on, go to the else condition*/}\n        {this.state.timeLeft <= 0 ? (\n          <div>\n            {/* if the ballot HAS been cast, show the Chart Results and the Announcement\n              If the ballot has not been cast, show the PollQuestion \n            */}\n            {this.state.ballotCast ? (\n              <div>\n                {/* we are passing custom props called 'boys' and 'girls' to the Chart component to be used in there */}\n                <Chart boys={this.state.boys} girls={this.state.girls}/>\n                <Announce/>\n              </div>\n            ) : (<PollQuestion voteCallback={this.handleCastedVote}/>)}\n          </div>\n        ) : (\n          <div>\n            <CircleTimer endTime={this.state.endTime}/>\n            {/* if the vote has been cast show the chart, otherwise show the Poll */}\n            {!this.state.ballotCast ? ( \n                <PollQuestion voteCallback={this.handleCastedVote}/>\n              ) : (\n                <Chart boys={this.state.boys} girls={this.state.girls}/>\n              )\n            }\n          </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\nimport NoMatch from \"./pages/NoMatch\"\nimport Home from \"./pages/Home\"\n\n// This is mostly boiler plate\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      {/* when anyone goes to the path \"/\" (aka home) show them the Home Page */}\n      <Route path=\"/\" element={<Home/>}/>\n      {/* when anyone goes to a path that isn't defined above, show them the 404 page */}\n      <Route path=\"*\" element={<NoMatch/>}/>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n)\n"],"sourceRoot":""}